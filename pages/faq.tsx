import Link from "next/link";
import Layout from "@components/Layout";

import type { ReactElement } from "react";

export default function FAQ(): ReactElement {
    return (
        <Layout>
            {/*<div className={styles.faq}>*/}
            <div className="m-auto px-60 py-7 text-left">

                <h2 className="text-4xl">Frequently Asked Questions</h2>

                <div className="mt-12">
                    <h3 className="text-3xl underline">1: What is MCode?</h3>
                    <p className="text-xl text-gray-400 mt-1">
                        MCode is short for Mnemonic Code, it consists of 12 english words.
                    </p>
                    <p className="text-xl text-gray-400 mt-1">
                        MCode is a collection of 10,000 unique bags of 12 english mnemonic words generated by Python3 scripts.
                    </p>
                    <p className="text-xl text-gray-400 mt-1">
                        Loot is an unaudited project. Bags #1 to #7777 were claimable by
                        anyone and #7778 to #8000 are currently reserved for the contract
                        deployer.
                    </p>
                    <div className="mockup-code max-w-lg m-auto bg-neutral pt-3">
                        <pre data-prefix="$" className="text-white">
                            <code>pip3 install mnemonic</code>
                        </pre>
                        <pre data-prefix="$" className="text-white">
                            <code>python3</code>
                        </pre>
                        <pre data-prefix=">>>" className="text-warning">
                            <code>from mnemonic import Mnemonic</code>
                        </pre>
                        <pre data-prefix=">>>" className="text-warning">
                            <code>m = Mnemonic(&quot;english&quot;)</code>
                        </pre>
                        <pre data-prefix=">>>" className="text-warning">
                            <code>m.generate()</code>
                        </pre>
                        <pre className="text-success">
                            <code>&apos;brand account family tomorrow divide spawn poverty noble purpose update man lake&apos;</code>
                        </pre>
                        <pre data-prefix=">>>" className="text-warning">
                            <code>m.generate()</code>
                        </pre>
                        <pre className="text-success">
                            <code>&apos;occur skill garment blossom near wrist style gentle claw warm inner abandon&apos;</code>
                        </pre>
                    </div>
                </div>

                <div className="mt-10">
                    <h3 className="text-3xl underline">2: How MCode can be used?</h3>
                    <div className="text-xl text-gray-400 mt-4">
                        <p className="inline-block text-red-700">eg1: </p>{" "}
                        <p className="inline-block text-gray-400 text-xl">MCode can be used in breeding games.</p>
                    </div>
                    <div className="mt-4 m-auto text-center">
                        Snippets to check if MCode A and MCode B can give a birth.
                    </div>
                    <div className="mockup-code max-w-lg m-auto bg-neutral">
                        <pre className="text-white">
                            <code>from mnemonic import Mnemonic</code>
                        </pre>
                        <pre className="text-warning">
                            <code>def can_give_birth(mcode_a: str, mcode_b: str) -{">"} bool:</code>
                        </pre>
                        <pre className="text-warning">
                            <code>    m = Mnemonic(&apos;english&apos;)</code>
                        </pre>
                        <pre className="text-warning">
                            <code>    mcode_tmp = &apos; &apos;.join(mcode_a.split(&apos; &apos;)[:6] + mcode_b.split(&apos; &apos;)[6:])</code>
                        </pre>
                        <pre className="text-warning">
                            <code>    return m.check(mcode_tmp) </code>
                        </pre>
                    </div>

                    <div className="text-xl text-gray-400 mt-8">
                        <p className="inline-block text-red-700">eg2: </p>{" "}
                        <p className="inline-block text-gray-400 text-xl">MCode can be used in upgrade item.</p>
                    </div>
                    <div className="mt-4 m-auto text-center">
                        Snippets to upgrade item.
                    </div>
                    <div className="mockup-code max-w-lg m-auto bg-neutral">
                        <pre className="text-white">
                            <code>from mnemonic import Mnemonic</code>
                        </pre>
                        <pre className="text-white">
                            <code>from bip32utils import BIP32Key, BIP32_HARDEN</code>
                        </pre>
                        <pre className="text-warning">
                            <code>def upgrade(mcode_a: str, level: int) -{">"} str:</code>
                        </pre>
                        <pre className="text-warning">
                            <code>    m = Mnemonic(&apos;english&apos;)</code>
                        </pre>
                        <pre className="text-warning">
                            <code>    entropy = m.to_seed(mcode_a)</code>
                        </pre>
                        <pre className="text-warning">
                            <code>    k = BIP32Key.fromEntropy(entropy)</code>
                        </pre>
                        <pre className="text-warning">
                            <code>    p = k.ChildKey(0+BIP32_HARDEN).ChildKey(0+BIP32_HARDEN)</code>
                        </pre>
                        <pre className="text-warning">
                            <code>    cur = p.ChildKey(level+BIP32_HARDEN)</code>
                        </pre>
                        <pre className="text-warning">
                            <code>    return cur.Address()</code>
                        </pre>
                    </div>
                    <p className="mt-4 m-auto text-center">
                        Actually, we are geting one string from the above function<br/>
                        we can parse the string, use first N char to represent one attribute,<br/>
                        for example, arm, helm, weapon...etc <br/>
                        we take one random MCode for example
                    </p>
                    <br/>
                    <div className="mockup-code max-w-lg m-auto bg-neutral">
                        <pre className="text-white">
                            <code>mcode_a = &apos;occur skill garment blossom near wrist style gentle claw warm inner abandon&apos;</code>
                        </pre>
                        <pre data-prefix=">>>" className="text-warning">
                            <code>upgrade(mcode_a, 1)</code>
                        </pre>
                        <pre className="text-success">
                            <code>&apos;1KPa3kY4GMoGb19oLt9jPKY8ieqpZ2vP6e&apos;</code>
                        </pre>
                        <pre data-prefix=">>>" className="text-warning">
                            <code>upgrade(mcode_a, 2)</code>
                        </pre>
                        <pre className="text-success">
                            <code>&apos;1HUgvCejkXTKotTcntGh17A14u8xtzbxsk&apos;</code>
                        </pre>
                        <pre data-prefix=">>>" className="text-warning">
                            <code>upgrade(mcode_a, 3)</code>
                        </pre>
                        <pre className="text-success">
                            <code>&apos;1KFhyUgEFsXAp6LSAsANqFiKHPyxTKbGGR&apos;</code>
                        </pre>
                        <pre data-prefix=">>>" className="text-warning">
                            <code>upgrade(mcode_a, N)</code>
                        </pre>
                        <pre className="text-success">
                            <code>&apos; ...... &apos;</code>
                        </pre>
                    </div>
                </div>

                <div className="mt-10">
                    <h3 className="text-3xl underline">3: Can I build with MCode?</h3>
                    <p className="text-xl text-gray-400 mt-4">
                        Yes, you are free to use MCode in any way you want
                    </p>
                </div>
            </div>
        </Layout>
    );
}
